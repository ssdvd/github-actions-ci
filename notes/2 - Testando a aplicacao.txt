testes automatizados:

essa parte, foi basicamente mostrando como utilizar o modo de teste do go, junto 
com essa aplicacao onde primeiro temos que subir todos os requisitos para depois 
executarmos os teste. Neste caso deviamos primeiro executar o comando:

docker compose up -d

dentro da pasta do app ha um arquivo docker compose, no qual a aplicacao se basea 
para o seu funcionamento, entao esse comando executa esse arquivo subindo toda a
infra necessaria para o funcionamento. Com os container funcionando corretamente
podemos iniciar nossa aplicacao com o comando:

go run main.go

esse comando ira iniciar o app, para que assim possa ser possivel realizar os testes
que se encontram no arquivo main_test.go, para validar as funcionalidades do app e
para isso executamos o seguinte comando:

go test -v main_test.go

esse comando executa o modulo de teste da linguagem go, e o parametro -v ira detalhar
todo o passo a passo do testes executados, printando os resultado no nosso terminal.

E para facilicar nossa vida, em vez de realizar todo esse processo, a cada vez que 
alguem fizer uma alteracao no app. Iremos utilizar o github actions para automatizar
esses processos de subir o container, subir o app e rodar os testes.

Github Actions:

o GitHub Actions, sera a ferramenta da qual iremos utilizar para buildar, testar e 
realizar o deploy do app e para isso a propria ferramenta nos recomenda utilizar a
configuracao go para as rotinas de CI, pois foi detectada essa linguagem no 
repositorio. Visto isso podemos partir para a configuracao.

Rotina de CI:

Ao selecionarmos a opcao sugerida do github, ele ja nos traz um arquivo yml pre 
configurado com algumas tasks padroes que sao utilizadas naquela linguagem, assim
vc podendo ou nao mudar alguma linha de cod, caso realmente seja necessario. E ao 
selecionar essa, basta realizar o commit atraves do github com esse arquivo yml 
que o github actions se encarregara de buildar, testar e deployar o app. E para 
configurarmos a rotina, iremos para a proxima aula.

Nessa aula, você aprendeu como:

Executar os testes automatizados para o Go, e por meio disso verificar se existem 
problemas de lógica na aplicação, para que sejam corrigidos;

Executar os testes de forma verbosa, para que assim seja possível ver todos os testes 
que estão sendo executados e como estão sendo executados. Assim podemos ver se algum 
deles retornou um erro;

Acessar o Github Actions, para que possamos começar a criar as rotinas de integração 
contínua;

Criar a sua primeira rotina de CI, utilizando a rotina sugerida pelo Actions, e assim 
permitir que apenas poucas linhas sejam alteradas.